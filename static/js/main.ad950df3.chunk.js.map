{"version":3,"sources":["services/api.js","components/Categories.js","components/Product.js","components/Products.js","pages/Home.js","pages/ShoppingCart.js","components/ProductDetails.js","pages/Details.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","endpointRequest","json","endpointResponse","getProductsFromCategoryAndQuery","categoryId","query","endpoint","Categories","props","state","allCategories","loading","fetchAllCategories","bind","handleChange","this","event","getCategory","target","id","api","allCategoriesData","setState","categories","map","categoryMap","className","key","htmlFor","data-testid","type","name","value","onChange","React","Component","Product","product","title","thumbnail","price","quantity","handleClick","validateDataFromStorage","saveStorage","data","JSON","parse","localStorage","getItem","outsideIndex","length","counter","insideIndex","setItem","stringify","products","push","constructObjectToSave","tag","src","alt","onClick","to","pathname","Products","Home","searchText","changeHandler","seedStateProducts","fetchProductIdAndQuery","category","results","ShoppingCart","getDataFromLocalStorage","ProductDetails","condition","Details","location","App","exact","path","component","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ad950df3.chunk.js","sourcesContent":["export async function getCategories() {\n  const endpoint = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const endpointRequest = await fetch(endpoint);\n  const endpointResponse = await endpointRequest.json();\n  return endpointResponse;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const endpoint = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  const endpointRequest = await fetch(endpoint);\n  const endpointResponse = await endpointRequest.json();\n  return endpointResponse;\n}\n\nexport async function getProductById(itemId) {\n  const endpoint = `https://api.mercadolibre.com/items?ids=${itemId}`;\n  const endpointRequest = await fetch(endpoint);\n  const endpointResponse = await endpointRequest.json();\n  return endpointResponse;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\n\nclass Categories extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { allCategories: '', loading: true };\n    this.fetchAllCategories = this.fetchAllCategories.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchAllCategories();\n  }\n\n  handleChange(event) {\n    const { getCategory } = this.props;\n    getCategory(event.target.id);\n  }\n\n  async fetchAllCategories() {\n    const allCategoriesData = await api.getCategories();\n    this.setState({\n      allCategories: allCategoriesData,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { allCategories, loading } = this.state;\n    if (loading) {\n      return <p>Loading paragrafo</p>;\n    }\n\n    const categories = allCategories\n      .map((categoryMap) => (\n        <label className=\"category\" key={ categoryMap.id } htmlFor={ categoryMap.id }>\n          <input\n            data-testid=\"category\"\n            type=\"radio\"\n            id={ categoryMap.id }\n            name=\"category\"\n            value={ categoryMap.name }\n          />\n          <li>{ categoryMap.name }</li>\n        </label>\n      ));\n    return <ul className=\"categories\" onChange={ this.handleChange }>{ categories }</ul>;\n  }\n}\n\nCategories.propTypes = { getCategory: PropTypes.func }.isRequired;\n\nexport default Categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props);\n    const { product } = this.props;\n    const { title, thumbnail, price, id } = product;\n    this.state = {\n      title,\n      thumbnail,\n      price,\n      id,\n      quantity: 0,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.validateDataFromStorage = this.validateDataFromStorage.bind(this);\n  }\n\n  handleClick() {\n    this.saveStorage();\n  }\n\n  constructObjectToSave() {\n    const { title, thumbnail, price, id, quantity } = this.state;\n    const obj = { title, thumbnail, price, id, quantity };\n    return obj;\n  }\n\n  async validateDataFromStorage() {\n    const data = JSON.parse(localStorage.getItem('cart'));\n    for (let outsideIndex = 0; outsideIndex < data.length; outsideIndex += 1) {\n      let counter = 0;\n      for (let insideIndex = 0; insideIndex < data.length; insideIndex += 1) {\n        if (data[outsideIndex].id === data[insideIndex].id) {\n          counter += 1;\n        }\n      }\n      data[outsideIndex].quantity = counter;\n    }\n    localStorage.setItem('cart', JSON.stringify(data));\n  }\n\n  saveStorage() {\n    if (!localStorage.getItem('cart')) {\n      localStorage.setItem('cart', JSON.stringify([]));\n    }\n    const products = JSON.parse(localStorage.getItem('cart'));\n    products.push(this.constructObjectToSave());\n    localStorage.setItem('cart', JSON.stringify(products));\n    this.validateDataFromStorage();\n  }\n\n  render() {\n    const { product, tag } = this.props;\n    return (\n      <div className=\"product-card\" data-testid=\"product\">\n        <h3 data-testid=\"shopping-cart-product-name\">{ product.title }</h3>\n        <img src={ product.thumbnail } alt=\"product\" />\n        <div>{product.price}</div>\n        <button\n          onClick={ this.handleClick }\n          type=\"button\"\n          data-testid={ tag }\n        >\n          add carrinho\n        </button>\n        <p type=\"number\" data-testid=\"shopping-cart-product-quantity\">\n          { product.quantity }\n        </p>\n        <Link\n          to={ {\n            pathname: `/details/${product.id}`,\n            state: { product },\n          } }\n          data-testid=\"product-detail-link\"\n        >\n          Detalhes\n        </Link>\n      </div>\n    );\n  }\n}\n\nProduct.propTypes = { product: PropTypes.object }.isRequired;\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Product from './Product';\n\nclass Products extends React.Component {\n  render() {\n    const { products } = this.props;\n\n    if (products.length === 0) {\n      return <div>Nenhum produto foi encontrado.</div>;\n    }\n    if (products) {\n      return (\n        <div className=\"products\">\n          {products.map((product) => (\n            <Product\n              key={ product.id }\n              product={ product }\n              tag=\"product-add-to-cart\"\n            />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nProducts.propTypes = { products: PropTypes.object }.isRequired;\n\nexport default Products;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport Categories from '../components/Categories';\nimport Products from '../components/Products';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryId: '',\n      searchText: '',\n      products: [],\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.getCategory = this.getCategory.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.seedStateProducts = this.seedStateProducts.bind(this);\n    this.fetchProductIdAndQuery = this.fetchProductIdAndQuery.bind(this);\n  }\n\n  // a cada click, chama a função fetchProductAndQuery com os elementos atuais do estado para povoar lista de produtos do estado;\n  handleClick() {\n    this.seedStateProducts();\n  }\n\n  // busca o event.target.value de categories via callback, salva o estado e chama a função para povoar produtos.\n  getCategory(category) {\n    this.setState({ categoryId: category });\n    this.fetchProductIdAndQuery(category);\n  }\n\n  // salva as modificações de texto do input no estado =D\n  changeHandler(event) {\n    this.setState({ searchText: event.target.value });\n  }\n\n  // chama a função fetchProductAndQuery com os elementos atuais do estado para povoar lista de produtos;\n  seedStateProducts() {\n    const { searchText, categoryId } = this.state;\n    this.fetchProductIdAndQuery(categoryId, searchText);\n  }\n\n  // busca e salva lista de produtos por parametro 'categoryId' e 'searchText'\n  async fetchProductIdAndQuery(categoryId, searchText = '') {\n    const { results } = await api.getProductsFromCategoryAndQuery(\n      categoryId,\n      searchText,\n    );\n    this.setState({ products: results });\n  }\n\n  render() {\n    const { searchText, products } = this.state;\n    return (\n      <div id=\"home-page\">\n        <header className=\"home-header\">\n          <div>\n            <input\n              data-testid=\"query-input\"\n              value={ searchText }\n              onChange={ (event) => this.changeHandler(event) }\n            />\n            <button\n              data-testid=\"query-button\"\n              type=\"button\"\n              onClick={ this.handleClick }\n            >\n              Pesquisar\n            </button>\n          </div>\n          <Link data-testid=\"shopping-cart-button\" to=\"/meucarrinho\">\n            carrinho\n          </Link>\n        </header>\n        <h3 data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </h3>\n        <div className=\"home-main\">\n          <Categories getCategory={ this.getCategory } />\n          <Products\n            products={ products }\n            seedStateProducts={ this.seedStateProducts }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Products from '../components/Products';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { products: null };\n\n    this.getDataFromLocalStorage = this.getDataFromLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDataFromLocalStorage();\n  }\n\n  async getDataFromLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('cart'));\n    this.setState({ products: data });\n  }\n\n  render() {\n    const { products } = this.state;\n    if (products === null) {\n      return (\n        <div>\n          <p>carrinho de compras!!</p>\n          <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <p>carrinho de compras!!</p>\n        <Products products={ products } />\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Product from './Product';\n\nclass ProductDetails extends Component {\n  render() {\n    const { title, condition, product } = this.props;\n    return (\n      <div>\n        <Product product={ product } tag=\"product-detail-add-to-cart\" />\n        <h3 data-testid=\"product-detail-name\">{ title }</h3>\n        <h4>Especificações Técnicas: </h4>\n        <ul>\n          <li>{ condition }</li>\n        </ul>\n        <Link data-testid=\"shopping-cart-button\" to=\"/meucarrinho\">Carrinho</Link>\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  title: PropTypes.string,\n  thumbnail: PropTypes.string,\n  price: PropTypes.string,\n  condition: PropTypes.string,\n  product: PropTypes.object,\n}.isRequired;\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductDetails from '../components/ProductDetails';\n\nclass Details extends Component {\n  render() {\n    const { location } = this.props;\n    const { state } = location;\n    const { product } = state;\n\n    const { title, condition } = product;\n\n    return (\n      <div>\n        <ProductDetails\n          title={ title }\n          condition={ condition }\n          product={ product }\n        />\n      </div>\n    );\n  }\n}\n\nDetails.propTypes = {\n  location: PropTypes.objectOf({}),\n}.isRequired;\n\nexport default Details;\n","import React from 'react';\nimport { HashRouter as BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Home, ShoppingCart, Details } from './pages';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route path=\"/meucarrinho\" component={ ShoppingCart } />\n        <Route path=\"/details/:id/\" render={ (props) => <Details { ...props } /> } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}